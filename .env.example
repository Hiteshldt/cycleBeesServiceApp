# ============================================================================
# CycleBees Services - Environment Variables Template
# ============================================================================
# Copy this file to .env.local and fill in your actual values
# cp .env.example .env.local
#
# IMPORTANT SECURITY NOTES:
# - NEVER commit .env.local to git (it's in .gitignore)
# - NEVER share secrets in Slack, email, or public channels
# - Use different secrets for development and production
# - Rotate secrets periodically (at least every 90 days)
# ============================================================================

# ============================================================================
# Supabase Configuration
# ============================================================================
# Your Supabase project URL
# Where to find: Supabase Dashboard > Project Settings > API > Project URL
# Example: https://abcdefghijklmnop.supabase.co
# Required: YES
# Secret: NO (public, exposed to browser)
NEXT_PUBLIC_SUPABASE_URL=xxxx

# Supabase Anonymous/Public API Key
# Where to find: Supabase Dashboard > Project Settings > API > Project API keys > anon/public
# This key is safe to expose in the browser (it's public by design)
# Used for client-side database queries with Row Level Security (RLS)
# Required: YES
# Secret: NO (public, exposed to browser)
NEXT_PUBLIC_SUPABASE_ANON_KEY=xxx

# NOTE: If you need server-side admin access to Supabase, add:
# SUPABASE_SERVICE_ROLE_KEY=xxx
# (This is a SECRET key - only use server-side, NEVER expose to browser)


# ============================================================================
# n8n WhatsApp Automation
# ============================================================================
# n8n Webhook URL for sending WhatsApp messages
# Where to find: n8n Dashboard > Workflows > Your WhatsApp Workflow > Webhook node
# Format: https://your-instance.app.n8n.cloud/webhook-test/send-template
# Required: YES (for WhatsApp notifications to work)
# Secret: PARTIAL (URL is not super sensitive, but don't expose publicly)
N8N_WEBHOOK_URL=xx


# ============================================================================
# JWT Authentication (Admin)
# ============================================================================
# Secret key for signing and verifying JWT tokens
# ⚠️ CRITICAL SECRET - KEEP THIS SECURE!
# Generate a strong random secret with:
#   node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# Or:
#   openssl rand -hex 64
#
# Requirements:
# - Minimum 64 characters (128 recommended)
# - Use different secrets for dev/staging/production
# - Rotate every 90 days minimum
#
# Required: YES
# Secret: YES (server-side only, NEVER expose to browser)
JWT_SECRET=xx


# ============================================================================
# Application Configuration
# ============================================================================
# Base URL for generating customer portal links
# Development: http://localhost:3000
# Staging: https://staging.cyclebees.com
# Production: https://services.cyclebees.com
# Required: OPTIONAL (defaults to http://localhost:3000 in development)
# Secret: NO (public)
NEXT_PUBLIC_BASE_URL=xx


# ============================================================================
# Optional: Additional Configuration (Not Yet Implemented)
# ============================================================================
# These are recommended for production use

# Cloudinary Image Hosting (currently hardcoded in webhook route)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_LOGO_URL=https://res.cloudinary.com/your-cloud/image/upload/v123/logo.jpg

# Support Contact (currently hardcoded as 919597312212)
# SUPPORT_WHATSAPP_NUMBER=919597312212

# Error Tracking (e.g., Sentry)
# NEXT_PUBLIC_SENTRY_DSN=https://xxxx@sentry.io/xxxx
# SENTRY_AUTH_TOKEN=xxx

# Analytics (e.g., Google Analytics, Mixpanel)
# NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# Rate Limiting (e.g., Upstash Redis)
# UPSTASH_REDIS_REST_URL=https://xxx.upstash.io
# UPSTASH_REDIS_REST_TOKEN=xxx

# Email Service (e.g., SendGrid, Resend)
# EMAIL_FROM=noreply@cyclebees.com
# SENDGRID_API_KEY=SG.xxx

# Feature Flags
# ENABLE_ANALYTICS=true
# ENABLE_PDF_DOWNLOAD=true
# ENABLE_BUNDLES=true


# ============================================================================
# Development vs Production
# ============================================================================
# NODE_ENV is automatically set by Next.js:
# - development: npm run dev
# - production: npm run build && npm run start
#
# You can override it manually if needed:
# NODE_ENV=production


# ============================================================================
# Verification Checklist
# ============================================================================
# After setting up .env.local, verify all required variables:
#
# Run: bash scripts/verify-env.sh (when created)
#
# Required variables:
# ✓ NEXT_PUBLIC_SUPABASE_URL
# ✓ NEXT_PUBLIC_SUPABASE_ANON_KEY
# ✓ N8N_WEBHOOK_URL
# ✓ JWT_SECRET (minimum 64 characters)
#
# Optional but recommended:
# ○ NEXT_PUBLIC_BASE_URL (auto-defaults to localhost:3000)


# ============================================================================
# Troubleshooting
# ============================================================================
# Variables not loading?
# 1. Restart dev server (Ctrl+C, then npm run dev)
# 2. Check file name is exactly .env.local (not .env or .env.txt)
# 3. Verify no trailing spaces after values
# 4. For browser access, must start with NEXT_PUBLIC_
# 5. Check .env.local is in root directory (same level as package.json)
#
# Still having issues? Check logs:
# - Browser console (F12) for client-side env vars
# - Terminal output for server-side env vars
